<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>开发工具 on NeuroPix</title>
    <link>https://neuropix.github.io/tags/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/</link>
    <description>Recent content in 开发工具 on NeuroPix</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 27 Sep 2024 10:00:00 +0800</lastBuildDate>
    <atom:link href="https://neuropix.github.io/tags/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Makefile 使用指南</title>
      <link>https://neuropix.github.io/posts/makefile-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</link>
      <pubDate>Fri, 27 Sep 2024 10:00:00 +0800</pubDate>
      <guid>https://neuropix.github.io/posts/makefile-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</guid>
      <description>&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;&#xA;&lt;p&gt;在Linux中，&lt;code&gt;make&lt;/code&gt;程序用于自动化编译大型源代码。通过运行简单的命令&lt;code&gt;make&lt;/code&gt;，我们可以轻松完成编译和安装软件的工作，极大地方便了开发者。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;make&lt;/code&gt;能够自动化完成这些任务，是因为项目中提供了一个名为Makefile的文件。Makefile负责指导&lt;code&gt;make&lt;/code&gt;如何编译和链接程序。&lt;/p&gt;&#xA;&lt;p&gt;Makefile的作用可以类比于Java项目的&lt;code&gt;pom.xml&lt;/code&gt;、Node项目的&lt;code&gt;package.json&lt;/code&gt;、Rust项目的&lt;code&gt;Cargo.toml&lt;/code&gt;。不同之处在于，尽管&lt;code&gt;make&lt;/code&gt;最初是为C语言开发的，但实际上它可以用于任何类型的项目，甚至不局限于编程语言。此外，&lt;code&gt;make&lt;/code&gt;主要应用于Unix/Linux环境，掌握Makefile的编写可以帮助我们在Linux环境下更好地进行开发，并为后续的Linux内核开发做好准备。&lt;/p&gt;&#xA;&lt;p&gt;在本教程中，我们将逐步学习如何编写Makefile，内容完全针对零基础的小白用户，只需提前掌握基本的Linux命令使用。&lt;/p&gt;&#xA;&lt;h2 id=&#34;安装make&#34;&gt;安装make&lt;/h2&gt;&#xA;&lt;p&gt;由于&lt;code&gt;make&lt;/code&gt;只能在Unix/Linux环境下运行，因此在Windows系统中，我们需要先在Windows下运行Linux。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;方法一：&lt;/strong&gt; 安装VirtualBox，并下载Linux发行版的安装镜像，推荐使用Ubuntu 22.04，以便在虚拟机中运行Linux。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;方法二：&lt;/strong&gt; 对于Windows 10/11用户，可以安装WSL（Windows Subsystem for Linux）：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;安装WSL&lt;/li&gt;&#xA;&lt;li&gt;在Windows应用商店中搜索并安装Ubuntu 22.04，安装完成后启动，Windows会弹出PowerShell窗口连接到Linux，此时可以输入Linux命令，类似于SSH连接。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;以Ubuntu为例，在Linux命令行中使用&lt;code&gt;apt&lt;/code&gt;命令安装&lt;code&gt;make&lt;/code&gt;和GCC工具链：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo apt install build-essential&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;对于macOS系统，由于其内核是BSD（Unix的一种变体），同样可以直接运行&lt;code&gt;make&lt;/code&gt;。推荐安装Homebrew，并通过Homebrew安装&lt;code&gt;make&lt;/code&gt;和GCC工具链：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ brew install make gcc&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;安装完成后，可以通过输入以下命令验证安装是否成功：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ make -v&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GNU Make 4.3&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ gcc --version&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcc (Ubuntu ...) 11.4.0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;通过上述步骤，我们成功安装了&lt;code&gt;make&lt;/code&gt;和GCC工具链。&lt;/p&gt;&#xA;&lt;h2 id=&#34;makefile基础&#34;&gt;Makefile基础&lt;/h2&gt;&#xA;&lt;p&gt;在Linux环境中，当我们输入&lt;code&gt;make&lt;/code&gt;命令时，它会在当前目录查找一个名为Makefile的文件，并根据该文件定义的规则自动执行编译命令等。&lt;/p&gt;&#xA;&lt;p&gt;Makefile可以理解为“生成文件”的说明书。&lt;/p&gt;&#xA;&lt;p&gt;举个例子，假设在当前目录下有3个文本文件：&lt;code&gt;a.txt&lt;/code&gt;、&lt;code&gt;b.txt&lt;/code&gt;和&lt;code&gt;c.txt&lt;/code&gt;。我们希望将&lt;code&gt;a.txt&lt;/code&gt;与&lt;code&gt;b.txt&lt;/code&gt;合并生成中间文件&lt;code&gt;m.txt&lt;/code&gt;，再用&lt;code&gt;m.txt&lt;/code&gt;与&lt;code&gt;c.txt&lt;/code&gt;合并生成最终的目标文件&lt;code&gt;x.txt&lt;/code&gt;，整个逻辑如下：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;┌─────┐ ┌─────┐ ┌─────┐&#xA;│a.txt│ │b.txt│ │c.txt│&#xA;└─────┘ └─────┘ └─────┘&#xA;   │       │       │&#xA;   └───┬───┘       │&#xA;       │           │&#xA;       ▼           │&#xA;    ┌─────┐        │&#xA;    │m.txt│        │&#xA;    └─────┘        │&#xA;       │           │&#xA;       └─────┬─────┘&#xA;             │&#xA;             ▼&#xA;          ┌─────┐&#xA;          │x.txt│&#xA;          └─────┘&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;根据上述逻辑，我们编写Makefile。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
