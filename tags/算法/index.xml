<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>算法 on NeuroPix</title>
    <link>http://localhost:1313/tags/%E7%AE%97%E6%B3%95/</link>
    <description>Recent content in 算法 on NeuroPix</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 08 Jun 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>动态规划：背包问题</title>
      <link>http://localhost:1313/posts/%E7%A7%91%E7%A0%94/%E5%85%B6%E4%BB%96/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/</link>
      <pubDate>Mon, 08 Jun 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/%E7%A7%91%E7%A0%94/%E5%85%B6%E4%BB%96/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/</guid>
      <description>背包问题是一种经典的动态规划问题，旨在在给定容量的情况下最大化物品的总价值。以“骨头收藏家”为例，每块骨头具有特定的体积和价值，骨头收藏家需要选择哪些骨头以获得最大的总价值。通过定义递推关系和状态转移方程，我们可以使用递归或动态规划数组来解决这个问题。分为“01背包问题”和“完全背包问题”，前者限制每种物品的数量，后者允许任意数量的物品选择。通过有效地管理和优化状态转移，能够在合理的时间复杂度内计算出最优解。</description>
    </item>
  </channel>
</rss>
