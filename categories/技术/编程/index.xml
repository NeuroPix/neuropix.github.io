<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>技术/编程 on NeuroPix</title>
    <link>https://neuropix.github.io/categories/%E6%8A%80%E6%9C%AF/%E7%BC%96%E7%A8%8B/</link>
    <description>Recent content in 技术/编程 on NeuroPix</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 27 Sep 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://neuropix.github.io/categories/%E6%8A%80%E6%9C%AF/%E7%BC%96%E7%A8%8B/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Makefile 使用指南</title>
      <link>https://neuropix.github.io/posts/%E6%8A%80%E6%9C%AF/%E7%BC%96%E7%A8%8B/makefile-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</link>
      <pubDate>Fri, 27 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://neuropix.github.io/posts/%E6%8A%80%E6%9C%AF/%E7%BC%96%E7%A8%8B/makefile-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</guid>
      <description>本文介绍了在Linux环境中使用&lt;code&gt;make&lt;/code&gt;和Makefile进行自动化编译的基本概念和操作。通过简单的命令，开发者可以高效地编译和安装软件。Makefile文件指导&lt;code&gt;make&lt;/code&gt;如何根据源文件生成目标文件，并通过定义规则、依赖关系和命令来实现增量编译。文章还讲解了如何安装&lt;code&gt;make&lt;/code&gt;、编写基本规则、使用伪目标、执行多条命令及定义和引用环境变量等技巧，从而提高开发效率，为Linux内核开发打下基础。</description>
    </item>
    <item>
      <title>SQL 简明笔记</title>
      <link>https://neuropix.github.io/posts/%E6%8A%80%E6%9C%AF/%E7%BC%96%E7%A8%8B/sql-%E7%AE%80%E6%98%8E%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Thu, 23 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://neuropix.github.io/posts/%E6%8A%80%E6%9C%AF/%E7%BC%96%E7%A8%8B/sql-%E7%AE%80%E6%98%8E%E7%AC%94%E8%AE%B0/</guid>
      <description>本文提供了数据库操作的基本SQL语法，包括数据定义、查询、更新和视图的创建。数据定义部分涵盖了模式、表和索引的创建、修改和删除。查询部分详细介绍了&lt;code&gt;SELECT&lt;/code&gt;语句及其聚集函数、连接、&lt;code&gt;ANY&lt;/code&gt;和&lt;code&gt;ALL&lt;/code&gt;谓词、&lt;code&gt;EXISTS&lt;/code&gt;谓词以及集合查询的用法。更新部分包括数据的插入、更新和删除操作。最后，视图的创建和删除也被简要提及，参考文献为王珊和萨师煊的《数据库系统概论》。</description>
    </item>
    <item>
      <title>动态规划：背包问题</title>
      <link>https://neuropix.github.io/posts/%E6%8A%80%E6%9C%AF/%E7%BC%96%E7%A8%8B/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/</link>
      <pubDate>Mon, 08 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://neuropix.github.io/posts/%E6%8A%80%E6%9C%AF/%E7%BC%96%E7%A8%8B/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/</guid>
      <description>背包问题是一种经典的动态规划问题，旨在在给定容量的情况下最大化物品的总价值。以“骨头收藏家”为例，每块骨头具有特定的体积和价值，骨头收藏家需要选择哪些骨头以获得最大的总价值。通过定义递推关系和状态转移方程，我们可以使用递归或动态规划数组来解决这个问题。分为“01背包问题”和“完全背包问题”，前者限制每种物品的数量，后者允许任意数量的物品选择。通过有效地管理和优化状态转移，能够在合理的时间复杂度内计算出最优解。</description>
    </item>
  </channel>
</rss>
